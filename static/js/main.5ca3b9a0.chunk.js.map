{"version":3,"sources":["lib/utility.js","components/GameDetailView.js","components/GameListView.js","components/Navbar.js","services/request.js","services/games.js","App.js","serviceWorker.js","index.js"],"names":["createPlatformNodes","platforms","sort","a","b","order","orderPlatforms","filterDuplicatePlatforms","map","platform","className","key","slug","icon","faXbox","faDesktop","faPlaystation","src","faApple","faLinux","faAndroid","createStoreNodes","stores","orderStores","filterDuplicateStores","store","url_en","console","log","url","href","faSteam","faGooglePlay","convertToStoreIcon","filteredArray","indexOf","some","push","GameDetailView","props","name","description","metacritic","rating","released","background_image","website","clip","hideGameDetail","parent_platforms","platformNodes","storeNodes","outerWrapperStyle","backgroundImage","style","onClick","faArrowLeft","dangerouslySetInnerHTML","__html","controls","GameListView","Navbar","onClickList","onClickRandom","request","theUrl","Promise","resolve","reject","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","getGameDetail","gameID","random","Math","floor","toString","JSON","parse","getGameList","selectedGenre","data","results","filteredResults","filter","result","App","id","setState","showDetail","handleGenreChange","event","target","value","state","nodes","createGamesListNode","gameListNodes","game","showGameDetail","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iUA0KaA,EAAsB,SAAAC,GAGjC,OAP4B,SAAAA,GAC5B,OAAOA,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAQD,EAAEC,SAKnBC,CADCC,EAAyBN,IAE3BO,KAAI,SAAAC,GAAQ,OAClC,yBAAKC,UAAU,eAAeC,IAAKF,EAASG,MAhKjC,UADsBA,EAkKRH,EAASG,OAjKJ,aAATA,GAAgC,YAATA,EAE1C,8BACE,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,0BAAMJ,UAAU,aAAhB,aAIO,OAATE,EAEA,8BACE,kBAAC,IAAD,CAAiBC,KAAME,MACvB,0BAAML,UAAU,aAAhB,YAKK,gBAATE,GACS,iBAATA,GACS,iBAATA,EAGE,8BACE,kBAAC,IAAD,CAAiBC,KAAMG,MACvB,0BAAMN,UAAU,aAAhB,kBAKK,aAATE,GACS,oBAATA,GACS,iBAATA,EAGE,8BACE,yBAAKF,UAAU,wBAAwBO,IAAI,wBAC3C,0BAAMP,UAAU,aAAhB,WAIO,QAATE,GAA2B,UAATA,EAElB,8BACE,kBAAC,IAAD,CAAiBC,KAAMK,MACvB,0BAAMR,UAAU,aAAhB,UAIO,QAATE,EAEA,8BACE,kBAAC,IAAD,CAAiBC,KAAMK,MACvB,0BAAMR,UAAU,aAAhB,QAIO,UAATE,EAEA,8BACE,kBAAC,IAAD,CAAiBC,KAAMM,MACvB,0BAAMT,UAAU,aAAhB,UAIO,YAATE,EAEA,8BACE,kBAAC,IAAD,CAAiBC,KAAMO,MACvB,0BAAMV,UAAU,aAAhB,iBAJN,GAjEmC,IAAAE,MA2KxBS,EAAmB,SAAAC,GAG9B,OAPyB,SAAAA,GACzB,OAAOA,EAAOpB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAQD,EAAEC,SAKnBkB,CADCC,EAAsBF,IAExBd,KAAI,SAAAiB,GAAK,OAC5B,yBAAKf,UAAU,YAAYC,IAAKc,EAAMb,MApGR,SAACA,EAAMc,GAEvC,GADAC,QAAQC,IAAIhB,EAAMc,GACL,SAATd,EAAiB,CACnB,IAAMiB,EAAMH,GAAkB,6CAC9B,OACE,uBAAGI,KAAMD,GACP,kBAAC,IAAD,CAAiBhB,KAAMC,MACvB,0BAAMJ,UAAU,aAAhB,oBAIN,GAAa,UAATE,EAAkB,CACpB,IAAMiB,EAAMH,GAAkB,kCAC9B,OACE,uBAAGI,KAAMD,GACP,kBAAC,IAAD,CAAiBhB,KAAMkB,MACvB,0BAAMrB,UAAU,aAAhB,UAIN,GAAa,gBAATE,EAAwB,CAC1B,IAAMiB,EAAMH,GAER,iDACJ,OACE,uBAAGI,KAAMD,GACP,kBAAC,IAAD,CAAiBhB,KAAMG,MACvB,0BAAMN,UAAU,aAAhB,sBAIN,GAAa,aAATE,EAAqB,CACvB,IAAMiB,EAAMH,GAAkB,yCAC9B,OACE,uBAAGI,KAAMD,GACP,yBAAKnB,UAAU,wBAAwBO,IAAI,wBAC3C,0BAAMP,UAAU,aAAhB,mBAIN,GAAa,UAATE,EAAkB,CACpB,IAAMiB,EAAMH,GAAkB,uCAC9B,OACE,uBAAGI,KAAMD,GACP,kBAAC,IAAD,CAAiBhB,KAAMK,MACvB,0BAAMR,UAAU,aAAhB,oBAIN,GAAa,QAATE,EAAgB,CAClB,IAAMiB,EAAMH,GAAkB,uBAC9B,OACE,uBAAGI,KAAMD,GACP,yBAAKnB,UAAU,aAAaO,IAAI,aAChC,0BAAMP,UAAU,aAAhB,mBAIN,GAAa,WAATE,EAAmB,CACrB,IAAMiB,EAAMH,GAAkB,gCAC9B,OACE,uBAAGI,KAAMD,GACP,kBAAC,IAAD,CAAiBhB,KAAMmB,MACvB,0BAAMtB,UAAU,aAAhB,gBAIN,GAAa,SAATE,EAAiB,CACnB,IAAMiB,EAAMH,GAAkB,mCAC9B,OACE,uBAAGI,KAAMD,GACP,yBAAKnB,UAAU,mBAAmBO,IAAI,mBACtC,0BAAMP,UAAU,aAAhB,qBA6BDuB,CAAmBR,EAAMb,KAAMa,EAAMC,aAK/BnB,EAA2B,SAAAN,GACtC,IAAMiC,EAAgB,GAD6B,uBAEnD,YAAqBjC,EAArB,+CAAgC,CAAC,IAAxBQ,EAAuB,QAC1BA,EAASA,SAASG,KAAKuB,QAAQ,OAAS,IACrCD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,OAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,KACNP,MAAO,KAITI,EAASA,SAASG,KAAKuB,QAAQ,QAAU,IACtCD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,QAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,MACNP,MAAO,KAITI,EAASA,SAASG,KAAKuB,QAAQ,UAAY,IACxCD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,UAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,QACNP,MAAO,KAITI,EAASA,SAASG,KAAKuB,QAAQ,SAAW,IACvCD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,SAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,OACNP,MAAO,MAITI,EAASA,SAASG,KAAKuB,QAAQ,gBAAkB,IAC9CD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,gBAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,cACNP,MAAO,MAITI,EAASA,SAASG,KAAKuB,QAAQ,aAAe,IAC3CD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,aAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,WACNP,MAAO,MAITI,EAASA,SAASG,KAAKuB,QAAQ,YAAc,IAC1CD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,YAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,UACNP,MAAO,MAITI,EAASA,SAASG,KAAKuB,QAAQ,QAAU,IACtCD,EAAcE,MAAK,SAAA3B,GAAQ,MAAsB,QAAlBA,EAASG,SAC3CsB,EAAcG,KAAK,CACjBzB,KAAM,MACNP,MAAO,OA/DoC,kFAqEnD,OAAO6B,GAGIV,EAAwB,SAAAF,GACnC,IAAMY,EAAgB,GADuB,uBAE7C,YAAkBZ,EAAlB,+CAA0B,CAAC,IAAlBG,EAAiB,QACpBA,EAAMA,MAAMb,KAAKuB,QAAQ,UAAY,IAClCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,UAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,QACNP,MAAO,EACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,QAAU,IAChCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,QAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,MACNP,MAAO,EACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,SAAW,IACjCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,SAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,OACNP,MAAO,EACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,SAAW,IACjCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,SAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,OACNP,MAAO,GACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,gBAAkB,IACxCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,gBAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,cACNP,MAAO,GACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,aAAe,IACrCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,aAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,WACNP,MAAO,GACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,WAAa,IACnCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,WAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,SACNP,MAAO,GACPqB,OAAQD,EAAMC,UAIhBD,EAAMA,MAAMb,KAAKuB,QAAQ,UAAY,IAClCD,EAAcE,MAAK,SAAAX,GAAK,MAAmB,UAAfA,EAAMb,SACrCsB,EAAcG,KAAK,CACjBzB,KAAM,QACNP,MAAO,GACPqB,OAAQD,EAAMC,WAvEuB,kFA4E7C,OAAOQ,GCjVII,EAAiB,SAAAC,GAC5B,IAAMC,EAAOD,EAAMC,KACbC,EAAcF,EAAME,YACpBC,EAAaH,EAAMG,WACnBC,EAASJ,EAAMI,OACfC,EAAWL,EAAMK,SACjBC,EAAmBN,EAAMM,iBACzBC,EAAUP,EAAMO,QAChBC,EAAOR,EAAMQ,KACbC,EAAiBT,EAAMS,eAEvB/C,EAAYsC,EAAMU,iBAClB3B,EAASiB,EAAMjB,OACf4B,EAAgBlD,EAAoBC,GACpCkD,EAAa9B,EAAiBC,GAE9B8B,EAAoB,CACxBC,gBAAiB,OAASR,EAAmB,KAG/C,OACE,6BACE,4BAAQnC,UAAU,cAChB,yBAAKA,UAAU,gBAAgB4C,MAAOF,GACpC,yBAAK1C,UAAU,iBACb,4BAAQA,UAAU,cAAc6C,QAASP,GACvC,2BACE,kBAAC,IAAD,CAAiBnC,KAAM2C,QAG3B,yBAAK9C,UAAU,oBACb,4BAAK8B,GACL,4BAAKE,GACJC,EAAS,GAAK,4BAAKA,IAEtB,yBAAKjC,UAAU,gBAAgBwC,GAC/B,yBAAKxC,UAAU,aAAayC,GAC5B,uBAAGzC,UAAU,gBAAb,aAAuCkC,GACvC,yBACElC,UAAU,qBACV+C,wBAAyB,CAAEC,OAAQjB,KAErC,wCACCM,GAAQ,2BAAO9B,IAAK8B,EAAMY,UAAQ,IACnC,6BACA,yBAAKjD,UAAU,kBACb,0CACW,uBAAGoB,KAAMgB,GAAU,IAAMA,UChDrCc,EAAe,SAAArB,GAAU,IAElCC,EAOED,EAPFC,KACAE,EAMEH,EANFG,WACAC,EAKEJ,EALFI,OACAC,EAIEL,EAJFK,SACA/B,EAGE0B,EAHF1B,KACAoC,EAEEV,EAFFU,iBACA3B,EACEiB,EADFjB,OAEI4B,EAAgBlD,EAAoBiD,GACpCE,EAAa9B,EAAiBC,GAE9B8B,EAAoB,CACxBC,gBAAiB,OAASxC,EAAO,KAE7B0C,EAAUhB,EAAMgB,QAEtB,OACE,yBACE7C,UAAU,qBACV4C,MAAOF,EACPG,QAASA,GAET,yBAAK7C,UAAU,sBACb,yBAAKA,UAAU,oBACb,4BAAK8B,GACL,4BAAKE,GACJC,EAAS,GAAK,4BAAKA,IAEtB,6BACA,yCACA,yBAAKjC,UAAU,gBAAgBwC,GAC/B,sCACA,yBAAKxC,UAAU,aAAayC,GAC5B,uBAAGzC,UAAU,gBAAb,aAAuCkC,MCrClCiB,EAAS,SAAAtB,GACpB,IAAMuB,EAAcvB,EAAMuB,YACpBC,EAAgBxB,EAAMwB,cAC5B,OACE,yBAAKrD,UAAU,WACb,0BAAM6C,QAASO,GAAf,aACA,0BAAMP,QAASQ,GAAf,iBCROC,G,MAAU,SAAAC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAU,IAAIC,eACpBD,EAAQE,mBAAqB,WACD,GAAtBF,EAAQG,YAAqC,KAAlBH,EAAQI,QACrCN,EAAQE,EAAQK,eAGpBL,EAAQM,KAAK,MAAOV,GAAQ,GAC5BI,EAAQO,KAAK,WCPJC,EAAa,uCAAG,WAAMC,GAAN,mBAAA3E,EAAA,6DACtB2E,IAGO,IACA,KAENC,EAASC,KAAKC,MAAM,IAAAD,KAAKD,UAA4B,IACzDD,EAASC,EAAOG,YAGZrD,EAAM,iCAAmCiD,EAXpB,SAeAd,EAAQnC,GAfR,cAerB6C,EAfqB,yBAgBpBS,KAAKC,MAAMV,IAhBS,2CAAH,sDAmBbW,EAAW,uCAAG,WAAMC,GAAN,uBAAAnF,EAAA,6DACrB0B,EAAM,6CACNyD,IACFzD,EAAMA,EAAM,WAAayD,GAHF,SAKEtB,EAAQnC,GALV,cAKnB6C,EALmB,OAMnBa,EAAOJ,KAAKC,MAAMV,GAClBc,EAAUD,EAAKC,QACfC,EAAkBD,EAAQE,QAAO,SAAAC,GACrC,QAAIA,EAAO5C,QATY,kBAelB0C,GAfkB,2CAAH,sDCkITG,E,YA5Ib,WAAYrD,GAAQ,IAAD,8BACjB,4CAAMA,KASRsC,cAVmB,uCAUH,WAAMC,GAAN,qCAAA3E,EAAA,sEACK0E,EAAcC,GADnB,OACRS,EADQ,OAGZ/C,EAUE+C,EAVF/C,KACAqD,EASEN,EATFM,GACApD,EAQE8C,EARF9C,YACAC,EAOE6C,EAPF7C,WACAC,EAME4C,EANF5C,OACAC,EAKE2C,EALF3C,SACAC,EAIE0C,EAJF1C,iBACAC,EAGEyC,EAHFzC,QACAG,EAEEsC,EAFFtC,iBACA3B,EACEiE,EADFjE,OAEIyB,EAAOwC,EAAKxC,MAAQwC,EAAKxC,KAAKA,KAEpC,EAAK+C,SAAS,CACZtD,OACAqD,KACApD,cACAC,aACAC,SACAC,WACAC,mBACAC,UACAG,mBACA3B,SACAyB,OACAgD,YAAY,IA5BA,2CAVG,wDA0CnBC,kBAAoB,SAAAC,GAClBtE,QAAQC,IAAIqE,EAAMC,OAAOC,OACzB,EAAKL,SAAS,CAAER,cAAeW,EAAMC,OAAOC,SA5C3B,EA+CnBd,YA/CmB,sBA+CL,gCAAAlF,EAAA,6DACNmF,EAAgB,EAAKc,MAAMd,cADrB,SAEkBD,EAAYC,GAF9B,OAENG,EAFM,OAGNY,EAAQZ,EAAgBjF,KAAI,SAAAmF,GAChC,OAAO,EAAKW,oBAAoBX,MAElC,EAAKG,SAAS,CACZS,cAAeF,EACfN,YAAY,IARF,2CA/CK,EA2DnBO,oBAAsB,SAAAE,GAAS,IAE3BhE,EAQEgE,EARFhE,KACAqD,EAOEW,EAPFX,GACAnD,EAME8D,EANF9D,WACAC,EAKE6D,EALF7D,OACAC,EAIE4D,EAJF5D,SACkB/B,EAGhB2F,EAHF3D,iBACAI,EAEEuD,EAFFvD,iBACA3B,EACEkF,EADFlF,OAEF,OACE,kBAAC,EAAD,CACEkB,KAAMA,EACNqD,GAAIA,EACJnD,WAAYA,EACZC,OAAQA,EACRC,SAAUA,EACV/B,KAAMA,EACNoC,iBAAkBA,EAClB3B,OAAQA,EACRiC,QAAS,kBAAM,EAAKsB,cAAcgB,OAhFrB,EAqFnBY,eAAiB,SAAAZ,GACflE,QAAQC,IAAI,eAAgBiE,IAtFX,EAyFnB7C,eAAiB,WACf,EAAK8C,SAAS,CAAEC,YAAY,KAxF5B,EAAKK,MAAQ,CACXL,YAAY,GAHG,E,iFAOjBW,KAAKrB,gB,+BAsFG,IAAD,SAcHqB,KAAKN,MAZPvD,EAFK,EAELA,iBACAE,EAHK,EAGLA,KACAN,EAJK,EAILA,YACA8D,EALK,EAKLA,cACA7D,EANK,EAMLA,WACAF,EAPK,EAOLA,KACAS,EARK,EAQLA,iBACA3B,EATK,EASLA,OACAqB,EAVK,EAULA,OACAC,EAXK,EAWLA,SACAmD,EAZK,EAYLA,WACAjD,EAbK,EAaLA,QAGF,OACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,CACEoD,YAAa,kBAAM,EAAKuB,eACxBtB,cAAe,kBAAM,EAAKc,oBAM1BkB,GAAc,yBAAKrF,UAAU,cAAc6F,GAC5CR,GACC,kBAAC,EAAD,CACEvD,KAAMA,EACNC,YAAaA,EACbC,WAAYA,EACZC,OAAQA,EACRC,SAAUA,EACVC,iBAAkBA,EAClBC,QAASA,EACTG,iBAAkBA,EAClB3B,OAAQA,EACRyB,KAAMA,EACNC,eAAgB0D,KAAK1D,sB,GArIf2D,IAAMC,WCEJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5ca3b9a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlaystation,\r\n  faXbox,\r\n  faApple,\r\n  faLinux,\r\n  faSteam,\r\n  faGooglePlay,\r\n  faAndroid\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faDesktop, faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const convertToPlatformIcon = slug => {\r\n  if (slug === \"xbox\" || slug === \"xbox-one\" || slug === \"xbox360\") {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faXbox} />\r\n        <span className=\"Icon-text\">Xbox One</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (slug === \"pc\") {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faDesktop} />\r\n        <span className=\"Icon-text\">Windows</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (\r\n    slug === \"playstation\" ||\r\n    slug === \"playstation4\" ||\r\n    slug === \"playstation3\"\r\n  ) {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faPlaystation} />\r\n        <span className=\"Icon-text\">Playstation 4</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (\r\n    slug === \"nintendo\" ||\r\n    slug === \"nintendo-switch\" ||\r\n    slug === \"nintendo-3ds\"\r\n  ) {\r\n    return (\r\n      <span>\r\n        <img className=\"nintendoSwitchSpecial\" src=\"/NintendoSwitch.svg\" />\r\n        <span className=\"Icon-text\">Switch</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (slug === \"mac\" || slug === \"macos\") {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faApple} />\r\n        <span className=\"Icon-text\">MacOS</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (slug === \"ios\") {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faApple} />\r\n        <span className=\"Icon-text\">iOS</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (slug === \"linux\") {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faLinux} />\r\n        <span className=\"Icon-text\">Linux</span>\r\n      </span>\r\n    );\r\n  }\r\n  if (slug === \"android\") {\r\n    return (\r\n      <span>\r\n        <FontAwesomeIcon icon={faAndroid} />\r\n        <span className=\"Icon-text\">Android</span>\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport const convertToStoreIcon = (slug, url_en) => {\r\n  console.log(slug, url_en);\r\n  if (slug === \"xbox\") {\r\n    const url = url_en ? url_en : \"https://www.xbox.com/en-US/microsoft-store\";\r\n    return (\r\n      <a href={url}>\r\n        <FontAwesomeIcon icon={faXbox} />\r\n        <span className=\"Icon-text\">Microsoft Store</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"steam\") {\r\n    const url = url_en ? url_en : \"https://store.steampowered.com/\";\r\n    return (\r\n      <a href={url}>\r\n        <FontAwesomeIcon icon={faSteam} />\r\n        <span className=\"Icon-text\">Steam</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"playstation\") {\r\n    const url = url_en\r\n      ? url_en\r\n      : \"https://store.playstation.com/en-us/home/games\";\r\n    return (\r\n      <a href={url}>\r\n        <FontAwesomeIcon icon={faPlaystation} />\r\n        <span className=\"Icon-text\">Playstation Store</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"nintendo\") {\r\n    const url = url_en ? url_en : \"https://www.nintendo.com/games/switch/\";\r\n    return (\r\n      <a href={url}>\r\n        <img className=\"nintendoSwitchSpecial\" src=\"/NintendoSwitch.svg\" />\r\n        <span className=\"Icon-text\">Nintendo Store</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"apple\") {\r\n    const url = url_en ? url_en : \"https://www.apple.com/ios/app-store/\";\r\n    return (\r\n      <a href={url}>\r\n        <FontAwesomeIcon icon={faApple} />\r\n        <span className=\"Icon-text\">Apple App Store</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"gog\") {\r\n    const url = url_en ? url_en : \"https://www.gog.com/\";\r\n    return (\r\n      <a href={url}>\r\n        <img className=\"gogSpecial\" src=\"/GOG.svg\" />\r\n        <span className=\"Icon-text\">Good Old Games</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"google\") {\r\n    const url = url_en ? url_en : \"https://play.google.com/store\";\r\n    return (\r\n      <a href={url}>\r\n        <FontAwesomeIcon icon={faGooglePlay} />\r\n        <span className=\"Icon-text\">Google Play</span>\r\n      </a>\r\n    );\r\n  }\r\n  if (slug === \"epic\") {\r\n    const url = url_en ? url_en : \"https://www.epicgames.com/store/\";\r\n    return (\r\n      <a href={url}>\r\n        <img className=\"epicGamesSpecial\" src=\"/EpicGames.svg\" />\r\n        <span className=\"Icon-text\">Epic Game Store</span>\r\n      </a>\r\n    );\r\n  }\r\n};\r\n\r\nexport const orderPlatforms = platforms => {\r\n  return platforms.sort((a, b) => a.order - b.order);\r\n};\r\n\r\nexport const createPlatformNodes = platforms => {\r\n  const filteredPlatforms = filterDuplicatePlatforms(platforms);\r\n  const orderedPlatforms = orderPlatforms(filteredPlatforms);\r\n  return orderedPlatforms.map(platform => (\r\n    <div className=\"platformIcon\" key={platform.slug}>\r\n      {convertToPlatformIcon(platform.slug)}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport const orderStores = stores => {\r\n  return stores.sort((a, b) => a.order - b.order);\r\n};\r\n\r\nexport const createStoreNodes = stores => {\r\n  const filteredStores = filterDuplicateStores(stores);\r\n  const orderedStores = orderStores(filteredStores);\r\n  return orderedStores.map(store => (\r\n    <div className=\"storeIcon\" key={store.slug}>\r\n      {convertToStoreIcon(store.slug, store.url_en)}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport const filterDuplicatePlatforms = platforms => {\r\n  const filteredArray = [];\r\n  for (let platform of platforms) {\r\n    if (platform.platform.slug.indexOf(\"pc\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"pc\")) {\r\n        filteredArray.push({\r\n          slug: \"pc\",\r\n          order: 1\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"mac\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"mac\")) {\r\n        filteredArray.push({\r\n          slug: \"mac\",\r\n          order: 2\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"linux\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"linux\")) {\r\n        filteredArray.push({\r\n          slug: \"linux\",\r\n          order: 3\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"xbox\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"xbox\")) {\r\n        filteredArray.push({\r\n          slug: \"xbox\",\r\n          order: 21\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"playstation\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"playstation\")) {\r\n        filteredArray.push({\r\n          slug: \"playstation\",\r\n          order: 22\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"nintendo\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"nintendo\")) {\r\n        filteredArray.push({\r\n          slug: \"nintendo\",\r\n          order: 23\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"android\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"android\")) {\r\n        filteredArray.push({\r\n          slug: \"android\",\r\n          order: 31\r\n        });\r\n      }\r\n    }\r\n    if (platform.platform.slug.indexOf(\"iOS\") >= 0) {\r\n      if (!filteredArray.some(platform => platform.slug === \"iOS\")) {\r\n        filteredArray.push({\r\n          slug: \"iOS\",\r\n          order: 32\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return filteredArray;\r\n};\r\n\r\nexport const filterDuplicateStores = stores => {\r\n  const filteredArray = [];\r\n  for (let store of stores) {\r\n    if (store.store.slug.indexOf(\"steam\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"steam\")) {\r\n        filteredArray.push({\r\n          slug: \"steam\",\r\n          order: 1,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"gog\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"gog\")) {\r\n        filteredArray.push({\r\n          slug: \"gog\",\r\n          order: 2,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"epic\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"epic\")) {\r\n        filteredArray.push({\r\n          slug: \"epic\",\r\n          order: 3,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"xbox\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"xbox\")) {\r\n        filteredArray.push({\r\n          slug: \"xbox\",\r\n          order: 11,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"playstation\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"playstation\")) {\r\n        filteredArray.push({\r\n          slug: \"playstation\",\r\n          order: 12,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"nintendo\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"nintendo\")) {\r\n        filteredArray.push({\r\n          slug: \"nintendo\",\r\n          order: 13,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"google\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"google\")) {\r\n        filteredArray.push({\r\n          slug: \"google\",\r\n          order: 21,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n    if (store.store.slug.indexOf(\"apple\") >= 0) {\r\n      if (!filteredArray.some(store => store.slug === \"apple\")) {\r\n        filteredArray.push({\r\n          slug: \"apple\",\r\n          order: 22,\r\n          url_en: store.url_en\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return filteredArray;\r\n};\r\n","import React from \"react\";\r\nimport { createPlatformNodes, createStoreNodes } from \"../lib/utility\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const GameDetailView = props => {\r\n  const name = props.name;\r\n  const description = props.description;\r\n  const metacritic = props.metacritic;\r\n  const rating = props.rating;\r\n  const released = props.released;\r\n  const background_image = props.background_image;\r\n  const website = props.website;\r\n  const clip = props.clip;\r\n  const hideGameDetail = props.hideGameDetail;\r\n\r\n  const platforms = props.parent_platforms;\r\n  const stores = props.stores;\r\n  const platformNodes = createPlatformNodes(platforms);\r\n  const storeNodes = createStoreNodes(stores);\r\n\r\n  const outerWrapperStyle = {\r\n    backgroundImage: \"url(\" + background_image + \")\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <div className=\"Outer-wrapper\" style={outerWrapperStyle}>\r\n          <div className=\"Inner-wrapper\">\r\n            <button className=\"Back-button\" onClick={hideGameDetail}>\r\n              <b>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n              </b>\r\n            </button>\r\n            <div className=\"Game-list-header\">\r\n              <h2>{name}</h2>\r\n              <h3>{metacritic}</h3>\r\n              {rating > 0 && <h3>{rating}</h3>}\r\n            </div>\r\n            <div className=\"platformList\">{platformNodes}</div>\r\n            <div className=\"storeList\">{storeNodes}</div>\r\n            <p className=\"Release-date\">Released: {released}</p>\r\n            <div\r\n              className=\"Detail-description\"\r\n              dangerouslySetInnerHTML={{ __html: description }}\r\n            />\r\n            <h3>Preview:</h3>\r\n            {clip && <video src={clip} controls />}\r\n            <br />\r\n            <div className=\"Detail-website\">\r\n              <span>\r\n                Website: <a href={website}>{\" \" + website}</a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { createPlatformNodes, createStoreNodes } from \"../lib/utility\";\r\n\r\nexport const GameListView = props => {\r\n  const {\r\n    name,\r\n    metacritic,\r\n    rating,\r\n    released,\r\n    icon,\r\n    parent_platforms,\r\n    stores\r\n  } = props;\r\n  const platformNodes = createPlatformNodes(parent_platforms);\r\n  const storeNodes = createStoreNodes(stores);\r\n\r\n  const outerWrapperStyle = {\r\n    backgroundImage: \"url(\" + icon + \")\"\r\n  };\r\n  const onClick = props.onClick;\r\n\r\n  return (\r\n    <div\r\n      className=\"Outer-list-wrapper\"\r\n      style={outerWrapperStyle}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"Inner-list-wrapper\">\r\n        <div className=\"Game-list-header\">\r\n          <h2>{name}</h2>\r\n          <h3>{metacritic}</h3>\r\n          {rating > 0 && <h3>{rating}</h3>}\r\n        </div>\r\n        <br />\r\n        <h3>Platforms</h3>\r\n        <div className=\"platformList\">{platformNodes}</div>\r\n        <h3>Stores</h3>\r\n        <div className=\"storeList\">{storeNodes}</div>\r\n        <p className=\"Release-date\">Released: {released}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Navbar = props => {\r\n  const onClickList = props.onClickList;\r\n  const onClickRandom = props.onClickRandom;\r\n  return (\r\n    <div className=\"Nav-bar\">\r\n      <span onClick={onClickList}>Top Games</span>\r\n      <span onClick={onClickRandom}>Random Game</span>\r\n      {/* <span>My Games</span> */}\r\n    </div>\r\n  );\r\n};\r\n","export const request = theUrl => {\r\n  return new Promise((resolve, reject) => {\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.onreadystatechange = function() {\r\n      if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {\r\n        resolve(xmlHttp.responseText);\r\n      }\r\n    };\r\n    xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous\r\n    xmlHttp.send(null);\r\n  });\r\n};\r\n","import { request } from \"./request\";\r\n\r\nexport const getGameDetail = async gameID => {\r\n  if (!gameID) {\r\n    // var max = 364944; //Max results from RAWG.api\r\n\r\n    var min = 3000; //More useable range of data\r\n    var max = 3500; //Many games have missing values\r\n\r\n    var random = Math.floor(Math.random() * (+max - +min)) + +min;\r\n    gameID = random.toString();\r\n  }\r\n\r\n  const url = \"https://api.rawg.io/api/games/\" + gameID; //Random Result\r\n  // const url = \"https://api.rawg.io/api/games/3498\"; //GTA5\r\n  // const url = \"https://api.rawg.io/api/games/3328\"; //The Witcher 3\r\n\r\n  const responseText = await request(url);\r\n  return JSON.parse(responseText);\r\n};\r\n\r\nexport const getGameList = async selectedGenre => {\r\n  let url = \"https://api.rawg.io/api/games?page_size=40\";\r\n  if (selectedGenre) {\r\n    url = url + \"&genres=\" + selectedGenre;\r\n  }\r\n  const responseText = await request(url);\r\n  const data = JSON.parse(responseText);\r\n  const results = data.results;\r\n  const filteredResults = results.filter(result => {\r\n    if (result.clip) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n  return filteredResults;\r\n};\r\n","import React from \"react\";\nimport {\n  GameDetailView,\n  GameListView,\n  Navbar,\n  QueryBar\n} from \"./components/index.js\";\nimport \"./styles/App.css\";\nimport { getGameDetail, getGameList } from \"./services/games.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDetail: false\n    };\n  }\n  componentDidMount() {\n    this.getGameList();\n  }\n\n  getGameDetail = async gameID => {\n    const data = await getGameDetail(gameID);\n    const {\n      name,\n      id,\n      description,\n      metacritic,\n      rating,\n      released,\n      background_image,\n      website,\n      parent_platforms,\n      stores\n    } = data;\n    const clip = data.clip && data.clip.clip;\n\n    this.setState({\n      name,\n      id,\n      description,\n      metacritic,\n      rating,\n      released,\n      background_image,\n      website,\n      parent_platforms,\n      stores,\n      clip,\n      showDetail: true\n    });\n  };\n\n  handleGenreChange = event => {\n    console.log(event.target.value);\n    this.setState({ selectedGenre: event.target.value });\n  };\n\n  getGameList = async () => {\n    const selectedGenre = this.state.selectedGenre;\n    const filteredResults = await getGameList(selectedGenre);\n    const nodes = filteredResults.map(result => {\n      return this.createGamesListNode(result);\n    });\n    this.setState({\n      gameListNodes: nodes,\n      showDetail: false\n    });\n  };\n\n  createGamesListNode = game => {\n    const {\n      name,\n      id,\n      metacritic,\n      rating,\n      released,\n      background_image: icon,\n      parent_platforms,\n      stores\n    } = game;\n    return (\n      <GameListView\n        name={name}\n        id={id}\n        metacritic={metacritic}\n        rating={rating}\n        released={released}\n        icon={icon}\n        parent_platforms={parent_platforms}\n        stores={stores}\n        onClick={() => this.getGameDetail(id)}\n      />\n    );\n  };\n\n  showGameDetail = id => {\n    console.log(\"game clicked\", id);\n  };\n\n  hideGameDetail = () => {\n    this.setState({ showDetail: false });\n  };\n\n  render() {\n    const {\n      background_image,\n      clip,\n      description,\n      gameListNodes,\n      metacritic,\n      name,\n      parent_platforms,\n      stores,\n      rating,\n      released,\n      showDetail,\n      website\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Navbar\n          onClickList={() => this.getGameList()}\n          onClickRandom={() => this.getGameDetail()}\n        />\n        {/* <QueryBar\n          handleGenreChange={this.handleGenreChange}\n          handleSearch={() => this.getGameList()}\n        /> */}\n        {!showDetail && <div className=\"List-nodes\">{gameListNodes}</div>}\n        {showDetail && (\n          <GameDetailView\n            name={name}\n            description={description}\n            metacritic={metacritic}\n            rating={rating}\n            released={released}\n            background_image={background_image}\n            website={website}\n            parent_platforms={parent_platforms}\n            stores={stores}\n            clip={clip}\n            hideGameDetail={this.hideGameDetail}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}